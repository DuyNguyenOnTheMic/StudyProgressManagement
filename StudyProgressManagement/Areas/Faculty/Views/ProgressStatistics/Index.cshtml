
@{
    ViewBag.Title = "Thống kê tiến độ học tập";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Section start -->
<section>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title-wrap bar-info">
                        <h4 class="card-title mb-0">Thống kê tiến độ học tập</h4>
                    </div>
                </div>
                <div class="card-body">
                    <div class="card-block">
                        <form  id="frmStatistics">
                            <div class="form-body">
                                <div class="row justify-content-center" id="frmStatistics_body">
                                    <div class="col-6">
                                        <div class="form-group">
                                            <label>Ngành: </label>
                                            <select class="form-control" id="comboboxMajor" name="major" required">
                                                <option value="" selected="selected" disabled="disabled"> ----------- Chọn ngành ----------- </option>
                                                @foreach (var major in ViewBag.majors)
                                                {
                                                    <option value="@major.id">@major.name</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="form-group">
                                            <label>Khoá: </label>
                                            <select class="form-control" id="comboboxStudentCourse" name="student_course" required>
                                                <option value="" selected="selected" disabled="disabled"> ----------- Chọn khoá ----------- </option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-actions">
                                <button type="submit" class="btn btn-primary btn-lg btn-block" id="btnSubmit">
                                    Thống kê
                                    <i class="ft-trending-up position-right"></i>
                                </button>
                            </div>
                        </form>
                        <div class="card-block chartjs" style="display: none">
                            <input type="hidden" id="inputStudentCourse" value="" />
                            <input type="hidden" id="inputCreditsFrom" value="" />
                            <input type="hidden" id="inputCreditsTo" value="" />
                            <canvas id="column-chart" height="550"></canvas>
                        </div>
                        <div class="form-actions" id="frmShowStudents" style="display: none">
                            <div class="text-right">
                                <button type="button" class="btn btn-primary mr-1" id="btnSuccessStudent">
                                    Xem sinh viên đạt
                                    <i class="ft-check-circle position-right"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row" id="divViewStudents" style="display: none">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title-wrap bar-primary">
                        <h4 class="card-title" id="lblViewStudents"></h4>
                    </div>
                </div>
                <div class="card-body collapse show">
                    <div class="card-block card-dashboard">
                        <div class="table-responsive">
                            <table class="table table-striped table-bordered" id="tblViewStudents" width="100%">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th> MSSV </th>
                                        <th> Họ và tên </th>
                                        <th> Lớp </th>
                                        <th> Tín chỉ đã học </th>
                                        <th> Đại cương KTL đã học </th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Section end -->

<link href="~/app-assets/vendors/css/tables/datatable/datatables.min.css" rel="stylesheet" />

@section scripts {
    <script src="~/app-assets/vendors/js/datatable/datatables.min.js"></script>
    <script src="~/app-assets/vendors/js/chart.min.js"></script>
    <script src="~/app-assets/vendors/js/chartjs-plugin-datalabels.min.js"></script>

    <script type="text/javascript">

        $(document).ready(function () {
            // Load cascading dropdown between majors and student courses
            $("#comboboxMajor").change(function () {
                $("#comboboxStudentCourse").empty();
                var majorId = $('#comboboxMajor option:selected').val();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadStudentCourses", "ProgressStatistics")',
                    dataType: 'json',
                    data: { majorId: majorId },
                    success: function (results) {
                        $("#comboboxStudentCourse").append('<option value="" selected="selected" disabled="disabled"> ----------- Chọn khoá ----------- </option>');
                        $.each(results, function (i, result) {
                            $("#comboboxStudentCourse").append('<option value="' + result.id + '">' + result.course + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            });

            // Load cascading dropdown between student courses and class students
            $("#comboboxStudentCourse").change(function () {
                $('#frmStatistics .knowledge').remove();
                var StudentCourseId = $('#comboboxStudentCourse option:selected').val();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadKnowledgeType", "ProgressStatistics")',
                    dataType: 'json',
                    data: { studentCourseId: StudentCourseId },
                    success: function (results) {
                        $.each(results, function (i, result) {
                            var knowledgeName; knowledgeName = null != result.group_3 ? result.group_3 : result.group_2;
                            $("#frmStatistics_body").append('<div class="col-6 knowledge"><div class="form-group"><label>' + knowledgeName + ' </label><input type="number" min="0" class="form-control" id="txt' + result.id + '" name="' + result.id + '" placeholder="Nhập số tín chỉ"></div></div>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            });
        });

        //Get the context of the Chart canvas element we want to select
        var ctx = $("#column-chart");

        // Chart Options
        var chartOptions = {
            responsive: true,
            maintainAspectRatio: false,
            scaleShowVerticalLines: false,
            responsiveAnimationDuration: 500,
            borderRadius: 4,
            legend: {
                position: 'top',
            },
            scales: {
                xAxis: {
                    stacked: true,
                    grid: {
                        color: "#f3f3f3",
                        drawTicks: false,
                    },
                    ticks: {
                        padding: 20
                    }
                },
                yAxis: {
                    stacked: true,
                    grid: {
                        color: "#f3f3f3",
                        drawTicks: false,
                    }
                }
            },
            plugins: {
                title: {
                    text: "Thống kê SV theo từng khối kiến thức",
                    display: true,
                    font: {
                        size: 25
                    }
                },
            }
        };

        // Create the chart
        var chart = new Chart(ctx, {
            type: "bar",
            data: {},
            options: chartOptions,
            plugins: [ChartDataLabels]
        });

        $("#btnSubmit").click(function (event) {

            event.preventDefault();

            // Get form's data
            var majorId = $('#comboboxMajor').val();
            var studentCourseId = $('#comboboxStudentCourse').val();
            var reqlength = $('.form-control').length;
            var value = $('.form-control').filter(function () {
                return this.value != '';
            });


            // Validation for form
            if (!majorId) {
                toastr.options.positionClass = 'toast-bottom-right';
                toastr.warning('Bạn chưa chọn ngành và khoá');
            }
            else if (!studentCourseId) {
                toastr.options.positionClass = 'toast-bottom-right';
                toastr.warning('Bạn chưa chọn khoá');
            }
            else if (value.length >= 0 && (value.length !== reqlength)) {
                toastr.options.positionClass = 'toast-bottom-right';
                toastr.warning('Bạn chưa nhập tín chỉ tối thiểu');
            }
            else {

                // Get values from form group
                var knowledge_name = $(".knowledge .form-group").map(function () {
                    return $(this).text().trim();
                }).get();
                var knowledge_ids = $(".knowledge .form-control").map(function () {
                    return $(this).attr('name');
                }).get();
                var credits = $(".knowledge .form-control").map(function () {
                    return $(this).val();
                }).get();

                $('#divViewStudents').hide();
                $('.chartjs').show();

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetStatistics", "ProgressStatistics")',
                    data: { 'studentCourseId': studentCourseId, 'knowledge_name': knowledge_name, 'knowledge_ids': knowledge_ids, 'credits': credits },
                    success: function (response) {

                        // Get chart labels and data
                        var labels = response.map(function (e) {
                            return e.Item2;
                        });
                        var labels_adjusted = labels.map(label => label.split(/[./\-_]/));
                        var data_pass = response.map(function (e) {
                            return e.Item3;
                        });
                        var data_fail = response.map(function (e) {
                            return e.Item4;
                        });

                        // Chart Data
                        var chartData = {
                            labels: labels_adjusted,
                            datasets: [
                                {
                                    label: 'Đã đạt',
                                    data: data_pass,
                                    backgroundColor: 'rgba(105, 222, 180, 1)',
                                    borderColor: 'rgba(40, 208, 148, 1)',
                                    borderWidth: 1,
                                    datalabels: {
                                        display: function (context) {
                                            // Only return positive values
                                            return context.dataset.data[context.dataIndex] !== 0;
                                        }
                                    }
                                },
                                {
                                    label: 'Chưa đạt',
                                    data: data_fail,
                                    backgroundColor: 'rgba(189, 189, 189, 0.3)',
                                    borderColor: 'rgba(189, 189, 189, 1)',
                                    borderWidth: 1
                                }
                            ]
                        };

                        // Add value to hidden input credits
                        $('#inputStudentCourse').val(studentCourseId);
                        $('#inputCreditsFrom').val(knowledge_ids);
                        $('#inputCreditsTo').val(credits);

                        // Update chart data
                        chart.data = chartData;
                        chart.update();

                        // Get chart onclick event
                        chart.canvas.onclick = function clickHandler(evt) {
                            const points = chart.getElementsAtEventForMode(evt, 'nearest', { intersect: true }, true);

                            if (points.length) {
                                const firstPoint = points[0];
                                const label = chart.data.labels[firstPoint.index];
                                const value = chart.data.datasets[firstPoint.datasetIndex].data[firstPoint.index];
                                alert(value);
                                console.log(response);
                            }
                        };

                        // Show buttons to view list of students in statistics
                        $('#frmShowStudents').show();
                    }
                });
            }
        });
       

        $("#btnSuccessStudent").click(function (event) {

            var inputStudentCourse = $('#inputStudentCourse').val();
            var inputCreditsFrom = $('#inputCreditsFrom').val();
            var inputCreditsTo = $('#inputCreditsTo').val();

            $('#divViewStudents').show();

            // Create datatable for success students
            $('#lblViewStudents').text('DSSV đạt từ ' + inputCreditsFrom + ' đến ' + inputCreditsTo + ' TC');
            PopulateDatatable(inputStudentCourse, inputCreditsFrom, inputCreditsTo);

        });

        function PopulateDatatable(inputStudentCourse, inputCreditsFrom, inputCreditsTo) {

            var dataTable;
            var fileName;
            fileName = $('#lblViewStudents').text();

            dataTable = $('#tblViewStudents').DataTable(
                {
                    ajax: {
                        dataSrc: '',
                        type: 'POST',
                        url: '@Url.Action("GetStudentList", "ProgressStatistics")',
                        data: { 'studentCourseId': inputStudentCourse, 'inputCreditsFrom': inputCreditsFrom, 'inputCreditsTo': inputCreditsTo },
                        dataType: "json",
                    },
                    lengthMenu: [[50, 100, -1], [50, 100, "All"]],
                    destroy: true,
                    order: [[4, 'desc']],
                    columnDefs: [
                        { className: 'text-center', targets: [4] },
                    ],
                    columns: [
                        {
                            'data': '',
                            defaultContent: '',
                            searchable: false,
                            orderable: false,
                            className: 'text-center',
                            width: '20px'
                        },
                        { 'data': 'id' },
                        { 'data': 'full_name' },
                        { 'data': 'class_student' },
                        { 'data': 'sum' },
                        {
                            'data': 'current_no_culmulative',
                            'render': function (data) {
                                var number = data.split("/");
                                var progress = Math.round((number[0] * 100) / number[1]);
                                return '<div class="text-center">' + data + '</div><div class="progress mb-2"><div class="progress-bar progress-bar-striped" role="progressbar" aria-label="No culmulative credits progress" aria-valuenow="' + progress + '" aria-valuemin="0" aria-valuemax="100" style="width:' + progress + '%"></div></div>';
                            },
                            orderable: false,
                        }
                    ],
                    dom: 'Blfrtip',
                    buttons: [
                        {
                            extend: 'copy',
                            title: fileName
                        },
                        {
                            extend: 'excel',
                            title: fileName
                        },
                        {
                            extend: 'print',
                            title: fileName
                        }
                    ],
                    language: {
                        'url': "/app-assets/language/vi.json"
                    },
                });

            // Create Index column datatable
            dataTable.on('draw.dt', function () {
                dataTable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                    dataTable.cell(cell).invalidate('dom');
                });
            });
        };
    </script>
}