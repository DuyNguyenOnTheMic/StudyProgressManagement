
@{
    ViewBag.Title = "Xem chương trình đào tạo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--Bootstrap Grid options Starts-->
<section id="grid-option">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title-wrap bar-success">
                        <h4 class="card-title">Xem chương trình đào tạo</h4>
                    </div>
                </div>
                <div class="card-body">
                    <div class="card-block">
                        <form>
                            <div class="form-body">
                                <div class="row justify-content-center">
                                    <div class="col-6">
                                        <div class="form-group">
                                            <label>Ngành: </label>
                                            <select class="form-control" id="comboboxMajor" name="major" required onkeypress="document.getElementById('resp1').innerHTML=''">
                                                <option value="" selected="selected" disabled="disabled"> ----------- Chọn ngành ----------- </option>
                                                @foreach (var major in ViewBag.majors)
                                                {
                                                    <option value="@major.id">@major.name</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="form-group">
                                            <label>Khoá: </label>
                                            <select class="form-control" id="comboboxStudentCourse" name="student_course" required>
                                                <option value="" selected="selected" disabled="disabled"> ----------- Chọn khoá ----------- </option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                        <div class="table-responsive">
                            <table class="table table-bordered" id="tblStudyProgram" cellspacing="0" width="100%" style="display: none">
                                <thead style="text-align: center; background-color: #FFC8A4; color: rgba(0, 0, 0, 0.87) ">
                                    <tr>
                                        <th rowspan="2"> STT </th>
                                        <th rowspan="2"> MÃ HỌC PHẦN </th>
                                        <th rowspan="2"> TÊN HỌC PHẦN </th>
                                        <th rowspan="2"> TÊN HỌC PHẦN (TA) </th>
                                        <th rowspan="2"> TC </th>
                                        <th colspan="4"> SỐ TIẾT </th>
                                        <th rowspan="2"> BB/ TC </th>
                                        <th rowspan="2"> HỌC PHẦN TIÊN QUYẾT </th>
                                        <th rowspan="2"> HỌC PHẦN HỌC TRƯỚC </th>
                                        <th rowspan="2"> GHI CHÚ CHỈNH SỬA </th>
                                        <th rowspan="2" style="display: none"></th>
                                        <th rowspan="2" style="display: none"></th>
                                        <th rowspan="2" style="display: none"></th>
                                    </tr>
                                    <tr>
                                        <th> LT </th>
                                        <th> TH </th>
                                        <th> TT </th>
                                        <th> DA </th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                            <div class="container" id="viewStudyProgram_instruction">
                                <h4 class="card-title" style="text-align: center; margin-top: 50px;">Chọn ngành và khoá để xem chương trình đào tạo</h4>
                                <img style="display: block; margin-left: auto; margin-right: auto; width: 60%;" alt="Instruction" src="~/images/Viewing-amico.svg" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!--Bootstrap Grid options Ends-->


<link href="~/app-assets/vendors/css/tables/datatable/datatables.min.css" rel="stylesheet" />
<link href="~/app-assets/vendors/css/tables/datatable/rowGroup.dataTables.min.css" rel="stylesheet" />

@section scripts {

    <script src="~/app-assets/vendors/js/datatable/jquery.dataTables.min.js"></script>
    <script src="~/app-assets/vendors/js/datatable/dataTables.rowGroup.min.js"></script>

    <script type="text/javascript">

        $(document).ready(function () {

            // Load cascading dropdown between majors and student courses
             $("#comboboxMajor").change(function () {
                $("#comboboxStudentCourse").empty();
                var majorId = $('#comboboxMajor option:selected').val();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadStudentCourses", "StudyProgram")',
                    dataType: 'json',
                    data: { majorId: majorId },
                    success: function (results) {
                        $("#comboboxStudentCourse").append('<option value="" selected="selected" disabled="disabled"> ----------- Chọn khoá ----------- </option>');
                        $.each(results, function (i, result) {
                            $("#comboboxStudentCourse").append('<option value="' + result.id + '">' + result.course + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
             }).change();

            $("#comboboxStudentCourse").change(function () {
                var studentCourseId = $('#comboboxStudentCourse option:selected').val();
                if (studentCourseId != null) {
                    PopulateStudyProgram(studentCourseId);
                }
                else
                {
                }
            }).change();
        });

        function PopulateStudyProgram(studentCourseId) {

            $('#tblStudyProgram').show();
            $('#viewStudyProgram_instruction').hide();

            var dataTable;

            // Populate Study Program datatable
            dataTable = $('#tblStudyProgram').DataTable(
                {
                    ajax: {
                    dataSrc: '',
                    type: 'POST',
                    url: '@Url.Action("GetData", "StudyProgram")',
                    data: { 'id': studentCourseId },
                    dataType: 'json',
                    },

                    paging: false,
                    ordering: false,
                    info: false,
                    destroy: true,

                    // Row grouping of knowledge type name
                    order: [[13, 'asc'], [14, 'asc'], [15, 'asc']],
                    rowGroup: {
                        startRender: function (rows, group) {

                            var intVal = function (i) {
                                return typeof i === 'string' ?
                                    i.replace(/[\$,]/g, '') * 1 :
                                    typeof i === 'number' ?
                                        i : 0;
                            };

                            // Sum credits group by rows
                            var creditsSum = rows
                                .data()
                                .pluck('credits')
                                .reduce(function (a, b) {
                                    return intVal(a) + intVal(b);
                                }, 0);

                            // Check null rowGroup
                            if (group == null) {
                                return;
                            }
                            else {
                                return $('<tr/>')
                                    .append('<th colspan="4">' + group + '</td>')
                                    .append('<th style="color:#9E000D">' + creditsSum.toFixed(0) + '</td>')
                                    .append('<th colspan="8"></td>')
                            }
                        },
                        emptyDataGroup: null,
                        dataSrc: ['knowledge_type_group_1', 'knowledge_type_group_2', 'knowledge_type_group_3' ]
                    },
                    columnDefs: [
                        { visible: false, targets: [13, 14, 15] },
                        { className: "text-center", targets: [4, 5, 6, 7, 8, 9] }
                    ],

                    // Declare columns
                    columns: [
                        {
                            'data': null,
                            searchable: false,
                            orderable: false,
                            className: 'text-center',
                            width: '20px'
                        },
                        { 'data': 'curriculum_id' },
                        { 'data': 'name' },
                        { 'data': 'name_english' },
                        { 'data': 'credits' },
                        { 'data': 'theoretical_hours' },
                        { 'data': 'practice_hours' },
                        { 'data': 'internship_hours' },
                        { 'data': 'project_hours' },
                        { 'data': 'compulsory_or_optional' },
                        { 'data': 'prerequisites' },
                        { 'data': 'learn_before' },
                        { 'data': 'editing_notes' },
                        { 'data': 'knowledge_type_group_1' },
                        { 'data': 'knowledge_type_group_2' },
                        { 'data': 'knowledge_type_group_3' }
                    ],

                    language: {
                        'emptyTable': "Khoá sinh viên này chưa có dữ liệu <i class='ft-help-circle' style='vertical-align:middle'></i>",
                        'sZeroRecords': "Không có kết quả <i class='ft-help-circle' style='vertical-align:middle'></i>"
                    },

                });

            // Create Index column datatable
            dataTable.on('order.dt search.dt', function () {
                dataTable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();
        }

    </script>
}