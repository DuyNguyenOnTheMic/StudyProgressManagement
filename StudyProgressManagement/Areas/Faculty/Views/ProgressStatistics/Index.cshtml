
@{
    ViewBag.Title = "Thống kê tiến độ học tập";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Section start -->
<section>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title-wrap bar-info">
                        <h4 class="card-title mb-0">Thống kê tiến độ học tập</h4>
                    </div>
                </div>
                <div class="card-body">
                    <div class="card-block">
                        <form id="frmStatistics">
                            <div class="form-body">
                                <div class="row justify-content-start" id="frmStatistics_body">
                                    <div class="col-6">
                                        <div class="form-group">
                                            <label>Ngành: </label>
                                            <select class="form-control" title="Chọn ngành" id="comboboxMajor" name="major" required">
                                                <option value="" selected="selected" disabled="disabled"> ----------- Chọn ngành ----------- </option>
                                                @foreach (var major in ViewBag.majors)
                                                {
                                                    <option value="@major.id">@major.name</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="form-group">
                                            <label>Khoá: </label>
                                            <select class="form-control" title="Chọn khoá" id="comboboxStudentCourse" name="student_course" required>
                                                <option value="" selected="selected" disabled="disabled"> ----------- Chọn khoá ----------- </option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-actions">
                                <button type="submit" class="btn btn-primary btn-lg btn-block" id="btnSubmit">
                                    Thống kê
                                    <i class="ft-trending-up position-right"></i>
                                </button>
                            </div>
                        </form>
                        <div class="container" id="viewStatistics_instruction">
                            <h4 class="card-title text-center m-4">Chọn ngành và khoá, sau đó nhập tín chỉ cần đạt để xem thống kê</h4>
                            <img class="mx-auto d-block w-50" alt="Instruction" src="@Url.Content("~/assets/images/img_view_statistics.svg")" />
                        </div>
                        <div class="card-block chartjs" id="divChartJs" style="display: none">
                            <canvas id="column-chart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row" id="divViewStudents" style="display: none">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title-wrap bar-info">
                        <h4 class="card-title" id="lblViewStudents"></h4>
                    </div>
                </div>
                <div class="card-body collapse show">
                    <div class="card-block card-dashboard">
                        <div class="table-responsive">
                            <table class="table table-striped table-bordered" id="tblViewStudents" width="100%">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th> MSSV </th>
                                        <th> Họ và tên </th>
                                        <th> Lớp </th>
                                        <th> Tín chỉ đã học </th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Section end -->

<link href="@Url.Content("~/app-assets/vendors/css/tables/datatable/datatables.min.css")" rel="stylesheet" />

@section scripts {
    <script src="@Url.Content("~/app-assets/vendors/js/datatable/datatables.min.js")"></script>
    <script src="@Url.Content("~/app-assets/vendors/js/chart.min.js")"></script>
    <script src="@Url.Content("~/app-assets/vendors/js/chartjs-plugin-datalabels.min.js")"></script>
    <script src="@Url.Content("~/app-assets/vendors/js/jquery.signalR-2.4.3.min.js")"></script>
    <script src="~/signalr/hubs"></script>

    <script type="text/javascript">
    @Html.JsMinify(@<text>
        function StartProgressBar() {
            // Reference the auto-generated proxy for the hub.
            var progress = $.connection.progressHub;

            // Create a function that the hub can call back to display messages.
            progress.client.AddProgress = function (message, percentage) {
                if (percentage >= 100) {
                    return;
                }
                else {
                    $('#myprogress')
                        .attr({ 'aria-valuenow': percentage })
                        .text(message + ' ' + percentage + ' %')
                        .width(percentage);
                }
            };

            $.connection.hub.start();
        }

        $(document).ready(function () {
            // Load cascading dropdown between majors and student courses
            $("#comboboxMajor").change(function () {
                $("#comboboxStudentCourse").empty();
                var majorId = $('#comboboxMajor option:selected').val();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadStudentCourses", "ProgressStatistics")',
                    dataType: 'json',
                    data: { majorId: majorId },
                    success: function (results) {
                        $("#comboboxStudentCourse").append('<option value="" selected="selected" disabled="disabled"> ----------- Chọn khoá ----------- </option>');
                        $.each(results, function (i, result) {
                            $("#comboboxStudentCourse").append('<option value="' + result.id + '">' + result.course + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            });

            // Load cascading dropdown between student courses and class students
            $("#comboboxStudentCourse").change(function () {
                $('#frmStatistics .knowledge').remove();
                var StudentCourseId = $('#comboboxStudentCourse option:selected').val();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadKnowledgeType", "ProgressStatistics")',
                    dataType: 'json',
                    data: { studentCourseId: StudentCourseId },
                    success: function (results) {

                        // Get submit button
                        var mybutton = document.getElementById("btnSubmit");

                        if (results.length !== 0) {
                            $.each(results, function (i, result) {
                                // Enable submit button
                                mybutton.disabled = false;

                                // Load knowledge type text fields
                                var knowledgeName; knowledgeName = null != result.group_3 ? result.group_3 : result.group_2;
                                $("#frmStatistics_body").append('<div class="col-xl-4 col-lg-6 col-md-12 mb-1 knowledge"><div class="form-group"><label>' + knowledgeName + ': </label><input type="number" min="1" class="form-control" id="txt' + result.id + '" name="' + result.id + '" placeholder="Nhập số tín chỉ" oninput="this.value = !!this.value && Math.abs(this.value) > 0 ? Math.abs(this.value) : null"></div></div>');
                            });
                        }
                        else {
                            // disable submit button
                            mybutton.disabled = true;

                            // Show error message when student course has no study program
                            $("#frmStatistics_body").append('<div class="container knowledge"><h4 class="card-title text-center m-3">Khoá này chưa có chương trình đào tạo <i class="ft-help-circle"></i></h4></div>');
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            });
        });

        //Get the context of the Chart canvas element we want to select
        var ctx = $("#column-chart");

        // Chart Options
        var chartOptions = {
            responsive: true,
            maintainAspectRatio: false,
            scaleShowVerticalLines: false,
            responsiveAnimationDuration: 500,
            borderRadius: 4,
            legend: {
                position: 'top',
            },
            scales: {
                xAxis: {
                    stacked: true,
                    grid: {
                        color: "#f3f3f3",
                        drawTicks: false,
                    },
                    ticks: {
                        padding: 20
                    }
                },
                yAxis: {
                    stacked: true,
                    grid: {
                        color: "#f3f3f3",
                        drawTicks: false,
                    }
                }
            },
            plugins: {
                title: {
                    display: true,
                    font: {
                        size: 25
                    }
                },
            }
        };

        // Plugin block
        const legendMargin = {
            id: 'legendMargin',
            beforeInit(chart, legend, options) {
                const fitValue = chart.legend.fit;

                chart.legend.fit = function fit() {
                    fitValue.bind(chart.legend)();
                    return this.height += 30;
                }
            }
        };

        // Create the chart
        var chart = new Chart(ctx, {
            type: "bar",
            data: {},
            options: chartOptions,
            plugins: [ChartDataLabels, legendMargin]
        });

        $("#btnSubmit").click(function (event) {

            event.preventDefault();

            // Get form's data
            var majorId = $('#comboboxMajor').val();
            var studentCourseId = $('#comboboxStudentCourse').val();
            var reqlength = $('.knowledge .form-control').length;
            var value = $('.knowledge .form-control').filter(function () {
                return this.value != '';
            });


            // Validation for form
            if (!majorId) {
                toastr.options.positionClass = 'toast-bottom-right';
                toastr.warning('Bạn chưa chọn ngành và khoá');
            }
            else if (!studentCourseId) {
                toastr.options.positionClass = 'toast-bottom-right';
                toastr.warning('Bạn chưa chọn khoá');
            }
            else if (value.length >= 0 && (value.length !== reqlength)) {
                toastr.options.positionClass = 'toast-bottom-right';
                toastr.warning('Bạn chưa nhập hết số tín chỉ');
            }
            else {

                // Get values from form group
                var knowledge_name = $(".knowledge .form-group").map(function () {
                    return $(this).text().trim();
                }).get();
                var knowledge_ids = $(".knowledge .form-control").map(function () {
                    return $(this).attr('name');
                }).get();
                var credits = $(".knowledge .form-control").map(function () {
                    return $(this).val();
                }).get();

                $('#divViewStudents').hide();
                $('#viewStatistics_instruction').hide();
                $('.chartjs').show();

                swal({
                    title: 'Vui lòng đợi...',
                    allowEscapeKey: false,
                    allowOutsideClick: false,
                    html: '<div class="progress mb-2 mt-4" style="height: 30px"><div id="myprogress" class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div></div>',
                    onOpen: () => {
                        swal.showLoading();
                    }
                })

                StartProgressBar();

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetStatistics", "ProgressStatistics")',
                    data: { 'studentCourseId': studentCourseId, 'knowledge_name': knowledge_name, 'knowledge_ids': knowledge_ids, 'credits': credits },
                    success: function (response) {

                        swal.close();

                        // Remove previous hidden inputs
                        $('#divChartJs input[type="hidden"]').remove();

                        // Get chart labels and data
                        var labels = response.map(function (e) {
                            return e.Item1;
                        });
                        var knowledge_name = response.map(function (e) {
                            return e.Item2;
                        });
                        var data_pass = response.map(function (e) {
                            return e.Item3;
                        });
                        var data_fail = response.map(function (e) {
                            return e.Item4;
                        });

                        // Chart Data
                        var chartData = {
                            labels: labels,
                            datasets: [
                                {
                                    label: 'Đã đạt',
                                    data: data_pass,
                                    backgroundColor: 'rgba(40, 208, 148, 0.2)',
                                    borderColor: 'rgba(40, 208, 148)',
                                    borderWidth: 1,
                                    datalabels: {
                                        display: function (context) {
                                            // Only return positive values
                                            return context.dataset.data[context.dataIndex] !== 0;
                                        }
                                    }
                                },
                                {
                                    label: 'Chưa đạt',
                                    data: data_fail,
                                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                                    borderColor: 'rgba(255, 99, 132)',
                                    borderWidth: 1,
                                    datalabels: {
                                        display: function (context) {
                                            // Only return positive values
                                            return context.dataset.data[context.dataIndex] !== 0;
                                        }
                                    }
                                }
                            ]
                        };

                        // Add value to hidden inputs
                        $("#divChartJs").append('<input type="hidden" id="inputStudentCourse" value="' + studentCourseId + '" />');
                        $.each(response, function (i, result) {
                            $("#divChartJs").append('<input type="hidden" id="input' + result.Item1 + '" value="' + result.Item5 + '" />');
                        });

                        // Update chart data
                        var majorName = $('#comboboxMajor option:selected').text();
                        var studentCourseName = $('#comboboxStudentCourse option:selected').text();
                        chart.options.plugins.title.text = 'Thống kê sinh viên ' + studentCourseName + ' Ngành ' + majorName;
                        chart.options.plugins.tooltip.callbacks.beforeBody = function (context) {
                            return `${knowledge_name[context[0].dataIndex]}`;
                        };
                        chart.data = chartData;
                        chart.update();

                        // Get chart onclick event
                        chart.canvas.onclick = function clickHandler(evt) {
                            const points = chart.getElementsAtEventForMode(evt, 'nearest', { intersect: true }, true);

                            if (points.length) {
                                // Get values on user click
                                const firstPoint = points[0];
                                const label = chart.data.labels[firstPoint.index];
                                const datasetLabel = chart.data.datasets[firstPoint.datasetIndex].label;

                                // Get values from hidden inputs
                                var inputStudentCourse = $('#inputStudentCourse').val();
                                var inputCredits = $('#input' + label).val();

                                // Show and set text for view student list section
                                $('#divViewStudents').show();
                                $('#lblViewStudents').text('DSSV ' + datasetLabel + ' ' + inputCredits + ' TC của khối ' + label);

                                if (datasetLabel == "Đã đạt") {
                                    // Get success students
                                    PopulateDatatable(inputStudentCourse, inputCredits, label, true);
                                }
                                else {
                                    // Get fail students
                                    PopulateDatatable(inputStudentCourse, inputCredits, label, false);
                                }
                            }
                        };
                    }
                });
            }
        });


        function PopulateDatatable(inputStudentCourse, inputCredits, inputKnowledge, isTrue) {

            var dataTable;
            var fileName;
            fileName = $('#lblViewStudents').text();

            dataTable = $('#tblViewStudents').DataTable(
                {
                    ajax: {
                        dataSrc: '',
                        type: 'POST',
                        url: '@Url.Action("GetStudentList", "ProgressStatistics")',
                        data: { 'studentCourseId': inputStudentCourse, 'inputCredits': inputCredits, 'inputKnowledge': inputKnowledge, 'isTrue': isTrue },
                        dataType: "json",
                    },
                    lengthMenu: [[50, 100, -1], [50, 100, "Tất cả"]],
                    destroy: true,
                    order: [[4, 'desc']],
                    columnDefs: [
                        { className: 'text-center', targets: [4] },
                    ],
                    columns: [
                        {
                            'data': '',
                            defaultContent: '',
                            searchable: false,
                            orderable: false,
                            className: 'text-center',
                            width: '20px'
                        },
                        { 'data': 'id' },
                        { 'data': 'full_name' },
                        { 'data': 'class_student_id' },
                        { 'data': 'sum' }
                    ],
                    dom: 'Blfrtip',
                    buttons: [
                        {
                            extend: 'copy',
                            title: fileName
                        },
                        {
                            extend: 'excel',
                            title: fileName
                        },
                        {
                            extend: 'print',
                            title: fileName
                        }
                    ],
                    language: {
                        'url': '@Url.Content("~/app-assets/language/vi.json")'
                    },
                });

            // Create Index column datatable
            dataTable.on('draw.dt', function () {
                dataTable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                    dataTable.cell(cell).invalidate('dom');
                });
            });
        };
    </text>)
    </script>
}