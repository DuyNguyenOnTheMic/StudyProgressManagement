
@{
    ViewBag.Title = "Import kết quả đăng ký học tập";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Dropzone section start -->
<section id="dropzone-examples">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title-wrap bar-pink">
                        <h4 class="card-title">Import kết quả đăng ký học tập</h4>
                    </div>
                </div>
                <div class="card-body collapse show">
                    <div class="card-block">
                        @using (Html.BeginForm("Import", "StudyResult", FormMethod.Post, new { @enctype = "multipart/form-data" }))
                        {
                            <div class="form-body">
                                <div class="row justify-content-center">
                                    <div class="col-12">
                                        <div class="form-group">
                                            <label>Ngành: </label>
                                            <select class="form-control" id="comboboxMajor" name="major" required">
                                                <option value="" selected="selected" disabled="disabled"> ----------- Chọn ngành ----------- </option>
                                                @foreach (var major in ViewBag.majors)
                                                {
                                                    <option value="@major.id">@major.name</option>
                                                }
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label>Khoá: </label>
                                            <select class="form-control" id="comboboxStudentCourse" name="student_course" required>
                                                <option value="" selected="selected" disabled="disabled"> ----------- Chọn khoá ----------- </option>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label>Học kỳ: </label>
                                            <input type="text" class="form-control" id="txtTerm" name="term" placeholder="Nhập học kỳ (VD: HK223)" required oninput="this.value = this.value.toUpperCase()">
                                        </div>
                                    </div>
                                </div>
                                <div class="dropzone" id="my-dropzone">
                                    <div class="dz-default dz-message"><span>Thả file ở đây để upload</span></div>
                                </div>
                            </div>
                            <div class="form-actions">
                                <button type="submit" class="btn btn-primary btn-lg btn-block" id="submit-all">
                                    Import
                                    <i class="ft-thumbs-up position-right"></i>
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title-wrap bar-pink">
                        <h4 class="card-title">Tips</h4>
                    </div>
                </div>
                <div class="card-body">
                    <div class="card-block">
                        <h4 class="card-title" style="text-align:center">Chọn hình dưới để tải tệp tin import mẫu</h4>
                        <a href="~/assets/files/KQDKHT_K3_CNTT_Mau.xlsx" download>
                            <img style="display: block; margin-left: auto; margin-right: auto; margin-top: 50px; width: 100px; filter: drop-shadow( 3px 3px 2px rgba(0, 0, 0, .7));" alt="img_downloadIcon" src="~/assets/images/img_excel.svg" />
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row" id="errorCurriculumn_section" style="display: none">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title-wrap bar-pink">
                        <h4 class="card-title">Những học phần không import được</h4>
                    </div>
                </div>
                <div class="card-body collapse show">
                    <div class="card-block card-dashboard">
                        <div class="table-responsive">
                            <table class="table table-striped table-bordered file-export" id="tblErrorRows" width="100%">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th> Mã học phần </th>
                                        <th> Tên học phần </th>
                                        <th> Số tín chỉ </th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- // Dropzone section end -->

<link rel="stylesheet" type="text/css" href="~/app-assets/vendors/css/dropzone.min.css">
<link rel="stylesheet" type="text/css" href="~/app-assets/vendors/css/tables/datatable/datatables.min.css" />

@section scripts {

    <script src="~/app-assets/vendors/js/dropzone.min.js"></script>
    <script src="~/app-assets/vendors/js/datatable/datatables.min.js"></script>
    <script src="~/app-assets/vendors/js/datatable/dataTables.buttons.min.js"></script>
    <script src="~/app-assets/vendors/js/jquery.signalR-2.4.3.min.js"></script>
    <script src="~/signalr/hubs"></script>

    <script type="text/javascript">

        function StartProgressBar() {
            // Reference the auto-generated proxy for the hub.
            var progress = $.connection.progressHub;
            console.log(progress);

            // Create a function that the hub can call back to display messages.
            progress.client.AddProgress = function (message, percentage) {
                if (percentage >= 100) {
                    return;
                }
                else {
                    $('#myprogress')
                        .attr({ 'aria-valuenow': percentage })
                        .text(message + ' ' + percentage + ' %')
                        .width(percentage);
                }
            };

            $.connection.hub.start().done(function () {
                var connectionId = $.connection.hub.id;
                console.log(connectionId);
            });
        }

        $(document).ready(function () {
            // Load cascading dropdown between majors and student courses
            $("#comboboxMajor").change(function () {
                $("#comboboxStudentCourse").empty();
                var majorId = $('#comboboxMajor option:selected').val();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadStudentCourses", "RegistrationResult")',
                    dataType: 'json',
                    data: { majorId: majorId },
                    success: function (results) {
                        $("#comboboxStudentCourse").append('<option value="" selected="selected" disabled="disabled"> ----------- Chọn khoá ----------- </option>');
                        $.each(results, function (i, result) {
                            $("#comboboxStudentCourse").append('<option value="' + result.id + '">' + result.course + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            }).change();
        });

        Dropzone.options.myDropzone = {
            url: '@Url.Action("Import", "RegistrationResult")',
            autoProcessQueue: false,
            paramName: 'postedFile',
            timeout: null,
            maxFiles: 1,
            acceptedFiles: '.xlsx, .xls',
            dictInvalidFileType: "Tệp tin sai định dạng, chỉ được upload file excel",

            init: function () {

                var myDropzone = this;

                this.on('maxfilesexceeded', function (file) {
                    // Remove file and add again if user input more than 1
                    this.removeAllFiles();
                    this.addFile(file);
                });

                $("#submit-all").click(function (e) {
                    // Prevent dropzone from auto submit file
                    e.preventDefault();
                    e.stopPropagation();

                    var count = myDropzone.getQueuedFiles().length;

                    var majorId = document.getElementById("comboboxMajor").value;
                    var studentCourseId = document.getElementById("comboboxStudentCourse").value;
                    var termId = document.getElementById("txtTerm").value;

                    var termStructure = /^HK\d{3}$/;
                    const last2TermYear = termId.substring(2, 4);
                    const last2CurrentYear = new Date().getFullYear().toString().slice(-2);

                    // Validation for form
                    if (majorId == '') {
                        toastr.options.positionClass = 'toast-bottom-right';
                        toastr.warning('Bạn chưa chọn ngành và khoá');
                    }
                    else if (studentCourseId == '') {
                        toastr.options.positionClass = 'toast-bottom-right';
                        toastr.warning('Bạn chưa chọn khoá');
                    }
                    else if (termId == '') {
                        toastr.options.positionClass = 'toast-bottom-right';
                        toastr.warning('Bạn chưa nhập học kỳ');
                    }
                    else if (termId.length != 5) {
                        toastr.options.positionClass = 'toast-bottom-right';
                        toastr.warning('Học kỳ phải đúng 5 kí tự');
                    }
                    else if (termStructure.test(termId) == false) {
                        toastr.options.positionClass = 'toast-bottom-right';
                        toastr.warning('Học kỳ phải đúng cấu trúc (VD: HK223)');
                    }
                    else if (last2TermYear > last2CurrentYear) {
                        toastr.options.positionClass = 'toast-bottom-right';
                        toastr.warning('Năm không được lớn hơn năm hiện tại');
                    }
                    else if (termId.slice(-1) > 3) {
                        toastr.options.positionClass = 'toast-bottom-right';
                        toastr.warning('Học kỳ chỉ từ 1 đến 3');
                    }
                    else if (count == 0) {
                        toastr.options.positionClass = 'toast-bottom-right';
                        toastr.warning('File chưa được upload hoặc sai định dạng ');
                    }
                    else {

                        swal.close();

                        // Begin to import file
                        myDropzone.processQueue();

                        myDropzone.on("success", function (response, data) {

                            window.onbeforeunload = null;

                            data = JSON.parse(data);

                            if (data.length != 0) {

                                swal("Thông báo!", "Import thành công! Tuy nhiên, có một số học phần không nằm trong chương trình đào tạo nên hệ thống không import, bạn có thể xem chi tiết ở cuối trang", "info").done();

                                $('#errorCurriculumn_section').show();

                                var dataTable;
                                var colsToExport = [1, 2, 3];

                                // Populate datatable showing the error curriculums
                                dataTable = $('#tblErrorRows').DataTable({
                                    data: data,
                                    paging: false,
                                    info: false,
                                    destroy: true,
                                    dom: 'Bfrtip',
                                    buttons: [
                                        {
                                            extend: 'copy',
                                            title: 'KQDKHT-HocPhanBiLoi',
                                            exportOptions: {
                                                columns: colsToExport
                                            }
                                        },
                                        {
                                            extend: 'excel',
                                            title: 'KQDKHT-HocPhanBiLoi',
                                            exportOptions: {
                                                columns: colsToExport
                                            }
                                        },
                                        {
                                            extend: 'print',
                                            title: 'KQDKHT-HocPhanBiLoi',
                                            exportOptions: {
                                                columns: colsToExport
                                            }
                                        }
                                    ],
                                    columnDefs: [{
                                        searchable: false,
                                        orderable: false,
                                        className: 'text-center',
                                        width: '20px',
                                        targets: 0,
                                    }],
                                    order: [[1, 'asc']],
                                    columns: [
                                        { 'data': null },
                                        { 'data': 'curriculumId' },
                                        { 'data': 'curriculumName' },
                                        { 'data': 'credits' },
                                    ],
                                    language: {
                                        'sZeroRecords': "Không có kết quả <i class='ft-help-circle' style='vertical-align:middle'></i>"
                                    },
                                });

                                // Create Index column datatable
                                dataTable.on('order.dt search.dt', function () {
                                    dataTable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                                        cell.innerHTML = i + 1;
                                    });
                                }).draw();

                                $('.buttons-copy, .buttons-print, .buttons-excel').addClass('btn btn-outline-primary mr-1');
                            }
                            else {
                                swal("Thông báo", "Import thành công!", "success").done();
                                $('#errorCurriculumn_section').hide();
                            }
                        });
                    }
                });

                this.on('sending', function (data, xhr, formData) {
                    $('.form-control').each(function () {
                        // Send form data along with submit
                        formData.append($(this).attr('name'), $(this).val());

                        swal({
                            title: 'Vui lòng đợi...',
                            allowEscapeKey: false,
                            allowOutsideClick: false,
                            html: '<div class="progress mb-2" style="height: 30px; margin-top: 50px"><div id="myprogress" class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div></div>',
                            onOpen: () => {
                                swal.showLoading();
                            }
                        })

                        StartProgressBar();

                        // Show confirmation message when user closes tab
                        window.onbeforeunload = function () {
                            return "Changes you made may not be saved";
                        };
                    })
                });

                this.on('error', function (data, errorMessage, xhr) {

                    swal.close();
                    window.onbeforeunload = null;

                    if (errorMessage.indexOf('Error 417') !== -1) {
                        // Show message if the file is not in the right format (like missing columns, etc, ...)
                        var errorDisplay = document.querySelectorAll('[data-dz-errormessage]');
                        errorDisplay[errorDisplay.length - 1].innerHTML = 'Đã xảy ra lỗi, vui lòng kiểm tra lại tệp tin';
                    }
                    else if (errorMessage.indexOf('Error 409') !== -1) {
                        // Show message if student course has not had study program yet
                        var errorDisplay = document.querySelectorAll('[data-dz-errormessage]');
                        errorDisplay[errorDisplay.length - 1].innerHTML = 'Khoá này chưa có chương trình đào tạo';

                        swal("Thông báo", "Khoá sinh viên này chưa có chương trình đào tạo!", "error").done();
                    }
                    else if (errorMessage.indexOf('Error 400') !== -1) {
                        // Show message if this term has already been imported
                        var errorDisplay = document.querySelectorAll('[data-dz-errormessage]');
                        errorDisplay[errorDisplay.length - 1].innerHTML = 'Đã xảy ra lỗi';

                        swal({
                            title: 'Thông báo',
                            text: 'Học kỳ này đã được import, bạn có muốn import lại?',
                            type: 'warning',
                            showCancelButton: true,
                            cancelButtonText: 'Huỷ',
                            confirmButtonText: 'Import lại',

                        }).then(function () {

                            var studentCourseId = $('#comboboxStudentCourse').val();
                            var termId = $('#txtTerm').val();

                            // Show waiting message while delete
                            swal({
                                title: 'Đang xoá dữ liệu...',
                                allowEscapeKey: false,
                                allowOutsideClick: false,
                                onOpen: () => {
                                    swal.showLoading();
                                }
                            })

                            // Ajax call to delete study program of that student course
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("Delete", "RegistrationResult")',
                                data: { 'studentCourseId': studentCourseId, 'termId': termId, },
                                success: function (data) {
                                    if (data.success) {

                                        swal.close();

                                        // Re-import file after delete successfully
                                        $.each(myDropzone.files, function (i, file) {
                                            file.status = Dropzone.QUEUED
                                            file.previewElement.classList.remove("dz-error");
                                            return file.previewElement.classList.add("dz-success");
                                        });
                                        myDropzone.processQueue();

                                        myDropzone.on("success", function (response, data) {

                                            data = JSON.parse(data);

                                            if (data.length != 0)
                                            {
                                                swal("Thông báo", "Import lại thành công! Tuy nhiên, có một số học phần không nằm trong chương trình đào tạo nên hệ thống không import, bạn có thể xem chi tiết ở cuối trang", "info").done();
                                            }
                                            else
                                            {
                                                swal("Thông báo", "Import lại KQDK học tập thành công!", "success").done();
                                            }
                                        });
                                    }
                                }
                            });

                            }, function (dismiss) {
                                if (dismiss === 'cancel' || dismiss === 'close') {
                                    // Ignore
                                }
                            })
                    }
                });
            }
        };
    </script>
}