
@{
    ViewBag.Title = "Tìm kết quả học tập";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Section start -->
<section>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title-wrap bar-pink">
                        <h4 class="card-title mb-0">Tìm kiếm kết quả học tập</h4>
                    </div>
                </div>
                <div class="card-body">
                    <div class="card-block">
                        <form id="frmSearchStudyResult">
                            <div class="form-body">
                                <div class="row justify-content-center">
                                    <div class="col-6">
                                        <div class="form-group">
                                            <label>Ngành: </label>
                                            <select class="form-control" id="comboboxMajor" name="major" required">
                                                <option value="" selected="selected" disabled="disabled"> ----------- Chọn ngành ----------- </option>
                                                @foreach (var major in ViewBag.majors)
                                                {
                                                    <option value="@major.id">@major.name</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="form-group">
                                            <label>Khoá: </label>
                                            <select class="form-control" id="comboboxStudentCourse" name="student_course" required>
                                                <option value="" selected="selected" disabled="disabled"> ----------- Chọn khoá ----------- </option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="form-group">
                                            <label>Lớp: </label>
                                            <select class="form-control" id="comboboxClassStudent" name="class_student" required>
                                                <option value="" selected="selected" disabled="disabled"> ----------- Chọn lớp ----------- </option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="form-group">
                                            <label>Tên: </label>
                                            <input type="text" class="form-control" id="txtName" name="student_name" placeholder="Nhập tên sinh viên" required>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-actions">
                                <button type="submit" class="btn btn-primary btn-lg btn-block" id="btnSubmit">
                                    Tìm kiếm
                                    <i class="ft-search position-right"></i>
                                </button>
                            </div>
                        </form>
                        <div class="table-responsive">
                            <h4 class="card-title text-center" id="lblSearchStudents" style="margin: 30px; display: none">Kết quả tìm kiếm <i class="ft-file-text"></i></h4>
                            <table class="table table-striped table-bordered" id="tblSearchStudents" width="100%" style="display: none">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th> MSSV </th>
                                        <th> Họ và tên </th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                        <div class="table-responsive" style="margin-top: 50px">
                            <h4 class="card-title text-center" id="lblStudentName" style="margin: 30px; display: none"></h4>
                            <table class="table table-bordered" id="tblStudyResult" cellspacing="0" width="100%" style="display: none">
                                <thead style="text-align: center; background-color: #FFC8A4; color: rgba(0, 0, 0, 0.87) ">
                                    <tr>
                                        <th rowspan="2"> STT </th>
                                        <th rowspan="2"> MÃ HỌC PHẦN </th>
                                        <th rowspan="2"> TÊN HỌC PHẦN </th>
                                        <th rowspan="2"> TC </th>
                                        <th colspan="4"> SỐ TIẾT </th>
                                        <th rowspan="2"> BB/ TC </th>
                                        <th rowspan="2" style="display: none"></th>
                                        <th rowspan="2" style="display: none"></th>
                                        <th rowspan="2" style="display: none"></th>
                                        <th rowspan="2" style="display: none"></th>
                                        <th rowspan="2" style="display: none"></th>
                                        <th rowspan="2"> ĐIỂM 1 </th>
                                        <th rowspan="2"> ĐIỂM 2 </th>
                                        <th rowspan="2"> ĐIỂM MÔN </th>
                                        <th rowspan="2"> ĐIỂM CHỮ </th>
                                        <th rowspan="2"> TRẠNG THÁI </th>
                                    </tr>
                                    <tr>
                                        <th> LT </th>
                                        <th> TH </th>
                                        <th> TT </th>
                                        <th> DA </th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                            <div class="container" id="searchStudyResult_instruction">
                                <h4 class="card-title text-center">Nhập thông tin để tìm kiếm sinh viên</h4>
                                <img style="display: block; margin-left: auto; margin-right: auto; width: 60%;" alt="Instruction" src="~/assets/images/img_search_engines.svg" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Section end -->

<link href="~/app-assets/vendors/css/tables/datatable/datatables.min.css" rel="stylesheet" />
<link href="~/app-assets/vendors/css/tables/datatable/rowGroup.dataTables.min.css" rel="stylesheet" />

@section scripts {
    <script src="~/app-assets/vendors/js/datatable/jquery.dataTables.min.js"></script>
    <script src="~/app-assets/vendors/js/datatable/dataTables.rowGroup.min.js"></script>

    <script type="text/javascript">

        $(document).ready(function () {
            // Load cascading dropdown between majors and student courses
            $("#comboboxMajor").change(function () {
                $("#comboboxStudentCourse").empty();
                var majorId = $('#comboboxMajor option:selected').val();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadStudentCourses", "StudyResult")',
                    dataType: 'json',
                    data: { majorId: majorId },
                    success: function (results) {
                        $("#comboboxStudentCourse").append('<option value="" selected="selected" disabled="disabled"> ----------- Chọn khoá ----------- </option>');
                        $.each(results, function (i, result) {
                            $("#comboboxStudentCourse").append('<option value="' + result.id + '">' + result.course + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            });

            // Load cascading dropdown between student courses and class students
            $("#comboboxStudentCourse").change(function () {
                $("#comboboxClassStudent").empty();
                var StudentCourseId = $('#comboboxStudentCourse option:selected').val();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadClassStudents", "StudyResult")',
                    dataType: 'json',
                    data: { StudentCourseId: StudentCourseId },
                    success: function (results) {
                        $("#comboboxClassStudent").append('<option value="" selected="selected" disabled="disabled"> ----------- Chọn lớp ----------- </option>');
                        $.each(results, function (i, result) {
                            $("#comboboxClassStudent").append('<option value="' + result.id + '">' + result.id + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            });
        });


        $("#btnSubmit").click(function (event) {

            event.preventDefault();

            // Get form's data
            var majorId = document.getElementById("comboboxMajor").value;
            var studentCourseId = document.getElementById("comboboxStudentCourse").value;
            var classStudentId = document.getElementById("comboboxClassStudent").value;
            var studentName = document.getElementById("txtName").value;


            // Validation for form
            if (majorId == '') {
                toastr.options.positionClass = 'toast-bottom-right';
                toastr.warning('Bạn chưa chọn ngành và khoá');
            }
            else if (studentCourseId == '') {
                toastr.options.positionClass = 'toast-bottom-right';
                toastr.warning('Bạn chưa chọn khoá');
            }
            else if (classStudentId == '') {
                toastr.options.positionClass = 'toast-bottom-right';
                toastr.warning('Bạn chưa chọn lớp');
            }
            else if (studentName == '') {
                toastr.options.positionClass = 'toast-bottom-right';
                toastr.warning('Bạn chưa nhập tên sinh viên');
            }
            else {

                $('#lblSearchStudents').show();
                $('#tblSearchStudents').show();
                $('#searchStudyResult_instruction').hide();

                // Prevent user from submit multiple times
                var mybutton = document.getElementById("btnSubmit");
                mybutton.disabled = true;
                setTimeout(function () {
                    mybutton.disabled = false;
                }, 2000);

                var tblSearchStudents;

                // Populate search student datatable
                tblSearchStudents = $('#tblSearchStudents').DataTable(
                    {
                        ajax: {
                            dataSrc: '',
                            type: 'POST',
                            url: '@Url.Action("Search", "StudyResult")',
                            data: { 'studentCourseId': studentCourseId, 'classStudentId': classStudentId, 'studentName': studentName },
                            dataType: "json",
                        },

                        columns: [
                            {
                                'data': null,
                                searchable: false,
                                orderable: false,
                                className: 'text-center',
                                width: '20px'
                            },
                            { 'data': 'id' },
                            { 'data': 'full_name' },
                            {
                                'data': 'id', 'render': function (data)
                                {
                                    return "<a class='viewStudyResult success p - 0' data-original-title='' title='' onclick=PopulateStudyResult('"+ data + "')><i class='fa fa-info-circle font-medium-3 mr-2'></i></a>";
                                },
                                orderable: false,
                                searchable: false,
                                width: '10px',
                                className: 'text-center'
                            }
                        ],

                        language: {
                            'emptyTable': "Không tìm thấy sinh viên <i class='ft-help-circle' style='vertical-align:middle'></i>",
                            'sZeroRecords': "Không có kết quả <i class='ft-help-circle' style='vertical-align:middle'></i>",
                            'loadingRecords': 'Đang lấy dữ liệu...'
                        },

                        paging: false,
                        searching: false,
                        ordering: false,
                        info: false,
                        destroy: true,

                    });

                // Create Index column datatable
                tblSearchStudents.on('draw.dt', function () {
                    var info = tblSearchStudents.page.info();
                    tblSearchStudents.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                        cell.innerHTML = i + 1 + info.start;
                    });
                });
            }
        });

        function PopulateStudyResult(studentId) {

            // Prevent user from submit multiple times            
            $('.viewStudyResult').each(function () {
                $(this).removeClass('success');
                this.style.pointerEvents = 'none';
            });
            
            setTimeout(function () {
                $('.viewStudyResult').each(function () {
                    $(this).addClass('success');
                    this.style.pointerEvents = 'auto';
                });
            }, 1000);

            $('#tblStudyResult').show();

            var dataTable;

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetStudentInfo", "StudyResult")',
                    data: { 'studentId': studentId },
                    success: function (response) {
                        if (response) {
                            $('#lblStudentName').text(response);
                            $('#lblStudentName').show();
                        }
                        else {
                            $('#lblStudentName').hide();
                        }
                    }
            });


            dataTable = $('#tblStudyResult').DataTable(
                {
                    ajax: {
                        dataSrc: '',
                        type: 'POST',
                        url: '@Url.Action("GetData", "StudyResult")',
                        data: { 'studentId': studentId },
                        dataType: 'json',
                    },

                    paging: false,
                    ordering: false,
                    info: false,
                    destroy: true,

                    // Row grouping of knowledge type name
                    order: [[9, 'asc'], [10, 'asc'], [11, 'asc']],
                    rowGroup: {
                        startRender: function (rows, group, level) {

                            var intVal = function (i) {
                                return typeof i === 'string' ?
                                    i.replace(/[\$,]/g, '') * 1 :
                                    typeof i === 'number' ?
                                        i : 0;
                            };

                            // Sum credits group by rows
                            var creditsSum = rows
                                .data()
                                .pluck('credits')
                                .reduce(function (a, b) {
                                    return intVal(a) + intVal(b);
                                }, 0);

                            // Check null rowGroup
                            if (group == null) {
                                return;
                            }
                            else if (level != 0)
                            {
                                if (rows.data()[0].compulsory_credits != null && rows.data()[0].optional_credits != null)
                                {
                                    // Return total count of compulsory credits and optional credits
                                    var total_credits = rows.data()[0].compulsory_credits + rows.data()[0].optional_credits;
                                    return $('<tr/>')
                                        .append('<th colspan="3">' + group + ' (' + total_credits + ' tín chỉ: ' + rows.data()[0].compulsory_credits + ' bắt buộc + ' + rows.data()[0].optional_credits + ' tự chọn)' + '</td>')
                                        .append('<th style="color:#9E000D">' + creditsSum.toFixed(0) + '</td>')
                                        .append('<th colspan="10"></td>')
                                }
                                else if (rows.data()[0].compulsory_credits != null)
                                {
                                    // Return compulsory cresits
                                    return $('<tr/>')
                                        .append('<th colspan="3">' + group + ' (' + rows.data()[0].compulsory_credits + ' TC bắt buộc)'+ '</td>')
                                        .append('<th style="color:#9E000D">' + creditsSum.toFixed(0) + '</td>')
                                        .append('<th colspan="10"></td>')
                                }
                                else
                                {
                                    // Return optional credits
                                    return $('<tr/>')
                                        .append('<th colspan="3">' + group + ' (' + rows.data()[0].optional_credits + ' TC tự chọn)' + '</td>')
                                        .append('<th style="color:#9E000D">' + creditsSum.toFixed(0) + '</td>')
                                        .append('<th colspan="10"></td>')
                                }
                            }
                            else
                            {
                                // Return level 0 knowledge group
                                return $('<tr/>')
                                    .append('<th colspan="3">' + group + '</td>')
                                    .append('<th style="color:#9E000D">' + creditsSum.toFixed(0) + '</td>')
                                    .append('<th colspan="10"></td>')
                            }
                        },
                        emptyDataGroup: null,
                        dataSrc: ['knowledge_type_group_1', 'knowledge_type_group_2', 'knowledge_type_group_3' ]
                    },
                    columnDefs: [
                        { visible: false, targets: [9, 10, 11, 12, 13] },
                        { className: 'text-center', targets: [3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18] },
                        { className: 'font-weight-bold', targets: [16, 17, 18] },
                        { className: 'text-nowrap', targets: [18] },
                        { width: '20%', targets: [2] },
                        { width: '5%', targets: [0, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17] }
                    ],

                    // Declare columns
                    columns: [
                        {
                            'data': null,
                            searchable: false,
                            orderable: false,
                            className: 'text-center',
                            width: '20px'
                        },
                        { 'data': 'curriculum_id' },
                        { 'data': 'curriculum_name' },
                        { 'data': 'credits' },
                        { 'data': 'theoretical_hours' },
                        { 'data': 'practice_hours' },
                        { 'data': 'internship_hours' },
                        { 'data': 'project_hours' },
                        { 'data': 'compulsory_or_optional' },
                        { 'data': 'knowledge_type_group_1' },
                        { 'data': 'knowledge_type_group_2' },
                        { 'data': 'knowledge_type_group_3' },
                        { 'data': 'compulsory_credits' },
                        { 'data': 'optional_credits' },
                        { 'data': 'mark10' },
                        { 'data': 'mark10_2' },
                        { 'data': 'max_mark_10' },
                        { 'data': 'max_mark_letter' },
                        {
                            'data': 'is_pass',
                            'render': function (data, type, row, meta) {
                                if (data == 'x') {
                                    return '<p class="text-success">Hoàn thành <i class="ft-check-circle" style="vertical-align:middle"></i></p>';
                                }
                                else if (row.max_mark_10) {
                                    return '<p class="text-danger">Rớt môn <i class="ft-x-circle" style="vertical-align:middle"></i></p>';
                                }
                                else
                                {
                                    return '<p class="text-warning">Chưa học <i class="ft-help-circle" style="vertical-align:middle"></i></p>';
                                }
                            }
                        }
                    ],

                    language: {
                        'emptyTable': "Sinh viên này chưa có dữ liệu <i class='ft-help-circle' style='vertical-align:middle'></i>",
                        'sZeroRecords': "Không có kết quả <i class='ft-help-circle' style='vertical-align:middle'></i>",
                        'loadingRecords': 'Đang lấy dữ liệu...'
                    },

                });

                // Create Index column datatable
                dataTable.on('draw.dt', function () {
                    var info = dataTable.page.info();
                    dataTable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                        cell.innerHTML = i + 1 + info.start;
                    });
                });

                // Return nothing on ajax error
                $.fn.dataTable.ext.errMode = function (settings, helpPage, message) {
                    return;
                };
            }
    </script>
}