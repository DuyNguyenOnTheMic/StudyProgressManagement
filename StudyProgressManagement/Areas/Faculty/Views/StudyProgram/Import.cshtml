
@{
    ViewBag.Title = "Import chương trình đào tạo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Dropzone section start -->
<section id="dropzone-examples">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title-wrap bar-success">
                        <h4 class="card-title">Import chương trình đào tạo</h4>
                    </div>
                </div>
                <div class="card-body collapse show">
                    <div class="card-block">
                        @using (Html.BeginForm("Import", "StudyProgram", FormMethod.Post, new { @enctype = "multipart/form-data" }))
                        {
                            <div class="form-body">
                                <div class="row justify-content-center">
                                    <div class="col-12">
                                        <div class="form-group">
                                            <label>Ngành: </label>
                                            <select class="form-control" id="comboboxMajor" name="major" required">
                                                <option value="" selected="selected" disabled="disabled"> ----------- Chọn ngành ----------- </option>
                                                @foreach (var major in ViewBag.majors)
                                                {
                                                    <option value="@major.id">@major.name</option>
                                                }
                                            </select>
                                        </div>                                        
                                        <div class="form-group">
                                            <label>Khoá: </label>
                                            <select class="form-control" id="comboboxStudentCourse" name="student_course" required>
                                                <option value="" selected="selected" disabled="disabled"> ----------- Chọn khoá ----------- </option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="dropzone" id="my-dropzone">
                                    <div class="dz-default dz-message"><span>Thả file ở đây để upload</span></div>
                                </div>
                            </div>
                            <div class="form-actions">
                                <button type="submit" class="btn btn-primary btn-lg btn-block" id="submit-all">
                                    Import
                                    <i class="ft-thumbs-up position-right"></i>
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title-wrap bar-success">
                        <h4 class="card-title">Tips</h4>
                    </div>
                </div>
                <div class="card-body">
                    <div class="card-block">
                        <h4 class="card-title" style="text-align:center">Chọn hình dưới để tải tệp tin import mẫu</h4>
                        <a href="@Url.Content("~/assets/files/CTDT_K3_CNTT_Mau.xlsx")" download>
                            <img class="mx-auto d-block mt-4" width="100" style="filter: drop-shadow( 3px 3px 2px rgba(0, 0, 0, .7));" alt="img_downloadIcon" src="~/assets/images/img_excel.svg" />
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- // Dropzone section end -->

<link rel="stylesheet" type="text/css" href="~/app-assets/vendors/css/dropzone.min.css">

@section scripts {

    <script src="~/app-assets/vendors/js/dropzone.min.js"></script>
    <script src="~/app-assets/vendors/js/jquery.signalR-2.4.3.min.js"></script>
    <script src="~/signalr/hubs"></script>

    <script type="text/javascript">

        function StartProgressBar() {
            // Reference the auto-generated proxy for the hub.
            var progress = $.connection.progressHub;

            // Create a function that the hub can call back to display messages.
            progress.client.AddProgress = function (message, percentage) {
                if (percentage >= 100) {
                    return;
                }
                else {
                    $('#myprogress')
                        .attr({ 'aria-valuenow': percentage })
                        .text(message + ' ' + percentage + ' %')
                        .width(percentage);
                }
            };

            $.connection.hub.start();
        }

        $(document).ready(function () {
            // Load cascading dropdown between majors and student courses
            $("#comboboxMajor").change(function () {
                $("#comboboxStudentCourse").empty();
                var majorId = $('#comboboxMajor option:selected').val();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadStudentCourses", "StudyProgram")',
                    dataType: 'json',
                    data: { majorId: majorId },
                    success: function (results) {
                        $("#comboboxStudentCourse").append('<option value="" selected="selected" disabled="disabled"> ----------- Chọn khoá ----------- </option>');
                        $.each(results, function (i, result) {
                            $("#comboboxStudentCourse").append('<option value="' + result.id + '">' + result.course + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            }).change();
        });

        Dropzone.options.myDropzone = {
            url: '@Url.Action("Import", "StudyProgram")',
            autoProcessQueue: false,
            paramName: 'postedFile',
            timeout: null,
            maxFiles: 1,
            maxFilesize: 50,
            acceptedFiles: '.xlsx, .xls',
            dictFileTooBig: "Tệp quá lớn ({{filesize}}MB). Kích thước tối đa: {{maxFilesize}}MB.",
            dictInvalidFileType: "Tệp tin sai định dạng, chỉ được upload file excel",

            init: function () {

                var myDropzone = this;

                this.on('maxfilesexceeded', function (file) {
                    // Remove file and add again if user input more than 1
                    this.removeAllFiles();
                    this.addFile(file);
                });

                $("#submit-all").click(function (e) {
                    // Prevent dropzone from auto submit file
                    e.preventDefault();
                    e.stopPropagation();

                    var count = myDropzone.getQueuedFiles().length;

                    var majorId = document.getElementById("comboboxMajor").value;
                    var studentCourseId = document.getElementById("comboboxStudentCourse").value;

                    // Validation for form
                    if (majorId == '') {
                        toastr.options.positionClass = 'toast-bottom-right';
                        toastr.warning('Bạn chưa chọn ngành và khoá');
                    }
                    else if (studentCourseId == '') {
                        toastr.options.positionClass = 'toast-bottom-right';
                        toastr.warning('Bạn chưa chọn khoá');
                    }
                    else if (count == 0) {
                        toastr.options.positionClass = 'toast-bottom-right';
                        toastr.warning('File chưa được upload hoặc sai định dạng ');
                    }
                    else {
                        // Begin to import file
                        myDropzone.processQueue();

                        myDropzone.on("success", function () {
                            swal("Thông báo", "Import thành công!", "success").done();
                            window.onbeforeunload = null;
                        });
                    }
                });

                this.on('sending', function (data, xhr, formData) {
                    $('.form-control').each(function () {
                        // Send form data along with submit
                        formData.append($(this).attr('name'), $(this).val());

                        swal({
                            title: 'Vui lòng đợi...',
                            allowEscapeKey: false,
                            allowOutsideClick: false,
                            html: '<div class="progress mb-2 mt-4" style="height: 30px"><div id="myprogress" class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div></div>',
                            onOpen: () => {
                                swal.showLoading();
                            }
                        })

                        StartProgressBar();

                        // Show confirmation message when user closes tab
                        window.onbeforeunload = function () {
                            return "Changes you made may not be saved";
                        };
                    })
                });

                this.on('error', function (data, errorMessage, xhr) {

                    swal.close();
                    window.onbeforeunload = null;

                    if (errorMessage.indexOf('Error 417') !== -1) {
                        // Show message if the file is not in the right format (like missing columns, etc, ...)
                        var errorDisplay = document.querySelectorAll('[data-dz-errormessage]');
                        errorDisplay[errorDisplay.length - 1].innerHTML = 'Đã xảy ra lỗi, vui lòng kiểm tra lại tệp tin';

                        swal("Thông báo!", "Đã xảy ra lỗi, vui lòng kiểm tra lại tệp tin.", "error").done();
                    }
                    else if (errorMessage.indexOf('Error 400') !== -1) {
                        // Show message if this student course already has study program
                        var errorDisplay = document.querySelectorAll('[data-dz-errormessage]');
                        errorDisplay[errorDisplay.length - 1].innerHTML = 'Đã xảy ra lỗi';

                        swal({
                            title: 'Thông báo',
                            text: 'Khoá này đã có chương trình đào tạo, bạn có muốn import lại?',
                            type: 'warning',
                            showCancelButton: true,
                            cancelButtonText: 'Huỷ',
                            confirmButtonText: 'Import lại',

                        }).then(function () {

                            // Show waiting message while delete
                            swal({
                                title: 'Đang xoá dữ liệu...',
                                allowEscapeKey: false,
                                allowOutsideClick: false,
                                onOpen: () => {
                                    swal.showLoading();
                                }
                            })

                            var studentCourseId = $('#comboboxStudentCourse').val();

                            // Ajax call to delete study program of that student course
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("Delete", "StudyProgram")',
                                data: { 'id': studentCourseId },
                                success: function (data) {
                                    if (data.success) {

                                        swal.close();

                                        // Re-import file after delete successfully
                                        $.each(myDropzone.files, function (i, file) {
                                            file.status = Dropzone.QUEUED
                                            file.previewElement.classList.remove("dz-error");
                                            return file.previewElement.classList.add("dz-success");
                                        });
                                        myDropzone.processQueue();

                                        myDropzone.on("success", function (file) {
                                            swal("Thông báo", "Import lại CTĐT thành công!", "success").done();
                                        });
                                    }
                                    else
                                    {
                                        // Show message for user to confirm re-import all data
                                        swal({
                                            title: 'Thông báo',
                                            text: 'Khoá này đã có kết quả học tập hoặc kết quả đăng ký học tập, bạn có muốn import lại từ đầu, tất cả dữ liệu sẽ bị xoá hết?',
                                            type: 'warning',
                                            showCancelButton: true,
                                            cancelButtonText: 'Huỷ',
                                            confirmButtonText: 'Import lại từ đầu',

                                        }).then(function () {

                                            // Show waiting message while delete
                                            swal({
                                                title: 'Đang xoá dữ liệu...',
                                                allowEscapeKey: false,
                                                allowOutsideClick: false,
                                                onOpen: () => {
                                                    swal.showLoading();
                                                }
                                            })

                                            // Ajax call to delete all study results and registration results of student course
                                            $.ajax({
                                                type: 'POST',
                                                url: '@Url.Action("DeleteAll", "StudyProgram")',
                                                data: { 'id': studentCourseId },
                                                success: function (data) {
                                                    if (data.success) {

                                                        swal.close();

                                                        // Re-import file after delete successfully
                                                        $.each(myDropzone.files, function (i, file) {
                                                            file.status = Dropzone.QUEUED
                                                            file.previewElement.classList.remove("dz-error");
                                                            return file.previewElement.classList.add("dz-success");
                                                        });
                                                        myDropzone.processQueue();

                                                        myDropzone.on("success", function (file) {
                                                            swal("Thông báo", "Import lại CTĐT thành công!", "success").done();
                                                        });

                                                    }
                                                }
                                            });

                                        }, function (dismiss) {
                                            if (dismiss === 'cancel' || dismiss === 'close') {
                                                // Ignore
                                            }
                                        })
                                    }
                                }
                            });

                            }, function (dismiss) {
                                if (dismiss === 'cancel' || dismiss === 'close') {
                                    // Ignore
                                }
                            })
                    }
                });
            }
        };
    </script>
}


