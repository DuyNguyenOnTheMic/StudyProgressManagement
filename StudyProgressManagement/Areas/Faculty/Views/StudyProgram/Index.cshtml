
@{
    ViewBag.Title = "Xem chương trình đào tạo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--Bootstrap Grid options Starts-->
<section id="grid-option">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title-wrap bar-success">
                        <h4 class="card-title">Xem chương trình đào tạo</h4>
                    </div>
                </div>
                <div class="card-body">
                    <div class="card-block">
                        <form>
                            <div class="form-body">
                                <div class="row justify-content-center">
                                    <div class="col-6">
                                        <div class="form-group">
                                            <label>Ngành: </label>
                                            <select class="form-control" id="comboboxMajor" name="major" required onkeypress="document.getElementById('resp1').innerHTML=''">
                                                <option value="" selected="selected" disabled="disabled"> ----------- Chọn ngành ----------- </option>
                                                @foreach (var major in ViewBag.majors)
                                                {
                                                    <option value="@major.id">@major.name</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="form-group">
                                            <label>Khoá: </label>
                                            <select class="form-control" id="comboboxStudentCourse" name="student_course" required>
                                                <option value="" selected="selected" disabled="disabled"> ----------- Chọn khoá ----------- </option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                        <div class="table-responsive">
                            <table class="table table-bordered" id="tblStudyProgram" cellspacing="0" width="100%">
                                <thead style="text-align: center; background-color: #FFC8A4; color: rgba(0, 0, 0, 0.87) ">
                                    <tr>
                                        <th rowspan="2"> STT </th>
                                        <th rowspan="2"> MÃ HỌC PHẦN </th>
                                        <th rowspan="2"> TÊN HỌC PHẦN </th>
                                        <th rowspan="2"> TÊN HỌC PHẦN (TA) </th>
                                        <th rowspan="2"> TC </th>
                                        <th colspan="4"> SỐ TIẾT </th>
                                        <th rowspan="2"> BB/ TC </th>
                                        <th rowspan="2"> HỌC PHẦN TIÊN QUYẾT </th>
                                        <th rowspan="2"> HỌC PHẦN HỌC TRƯỚC </th>
                                        <th rowspan="2"> GHI CHÚ CHỈNH SỬA </th>
                                        <th rowspan="2"> TÊN LOẠI KIẾN THỨC </th>
                                        <th rowspan="2"> KHỐI KIẾN THỨC </th>
                                    </tr>
                                    <tr>
                                        <th> LT </th>
                                        <th> TH </th>
                                        <th> TT </th>
                                        <th> DA </th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!--Bootstrap Grid options Ends-->

<link href="~/app-assets/vendors/css/tables/datatable/datatables.min.css" rel="stylesheet" />

@section scripts {

    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/app-assets/vendors/js/datatable/datatables.min.js"></script>

    <script>

        $(document).ready(function () {

            var dataTable;



            // Load cascading dropdown between majors and student courses
             $("#comboboxMajor").change(function () {
                $("#comboboxStudentCourse").empty();
                var majorId = $('#comboboxMajor option:selected').val();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadStudentCourses", "StudyProgram")',
                    dataType: 'json',
                    data: { majorId: majorId },
                    success: function (results) {
                        $("#comboboxStudentCourse").append('<option value="" selected="selected" disabled="disabled"> ----------- Chọn khoá ----------- </option>');
                        $.each(results, function (i, result) {
                            $("#comboboxStudentCourse").append('<option value="' + result.id + '">' + result.course + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
             }).change();

            $("#comboboxStudentCourse").change(function () {
                var studentCourseId = $('#comboboxStudentCourse option:selected').val();
                if (studentCourseId != null) {
                   // Populate Study Program datatable
                    dataTable = $('#tblStudyProgram').DataTable(
                        {
                            ajax: {
                            dataSrc: '',
                            type: 'POST',
                            url: '@Url.Action("GetData", "StudyProgram")',
                            data: { 'id': studentCourseId },
                            dataType: 'json',
                            },

                            paging: false,
                            ordering: false,
                            info: false,
                            destroy: true,

                            // Row grouping
                            order: [[14, 'asc'], [13, 'asc']],
                            columnDefs: [
                                { visible: false, targets: [13, 14] },
                                { className: "text-center", targets: [4, 5, 6, 7, 8, 9] }
                            ],
                            rowGroup: {
                                startRender: function (rows, group) {

                                    var intVal = function (i) {
                                        return typeof i === 'string' ?
                                            i.replace(/[\$,]/g, '') * 1 :
                                            typeof i === 'number' ?
                                                i : 0;
                                    };

                                    var creditsSum = rows
                                        .data()
                                        .pluck('credits')
                                        .reduce(function (a, b) {
                                            return intVal(a) + intVal(b);
                                        }, 0);


                                    return $('<tr/>')
                                        .append('<td colspan="4" style="padding-left:40px">' + group + '</td>')
                                        .append('<td style="color:#9E000D">' + creditsSum.toFixed(0) + '</td>')
                                        .append('<td colspan="8"></td>')

                                },
                                dataSrc: 'knowledge_type_name',
                            },
                            drawCallback: function (settings) {
                                var api = this.api();
                                var rows = api.rows({ page: 'current' }).nodes();
                                var last = null;

                                api
                                    .column(14, { page: 'current' })
                                    .data()
                                    .each(function (group, i) {
                                        if (last !== group) {
                                            $(rows)
                                                .eq(i)
                                                .before('<tr class="group"><td colspan="13">' + group + '</td></tr>');

                                            last = group;
                                        }
                                    });
                            },

                            columns: [
                                {
                                    'data': null,
                                    searchable: false,
                                    orderable: false,
                                    className: 'text-center',
                                    width: '20px'
                                },
                                { 'data': 'id' },
                                { 'data': 'name' },
                                { 'data': 'name_english' },
                                { 'data': 'credits' },
                                { 'data': 'theoretical_hours' },
                                { 'data': 'practice_hours' },
                                { 'data': 'internship_hours' },
                                { 'data': 'project_hours' },
                                { 'data': 'compulsory_or_optional' },
                                { 'data': 'prerequisites' },
                                { 'data': 'learn_before' },
                                { 'data': 'editing_notes' },
                                { 'data': 'knowledge_type_name' },
                                { 'data': 'knowledge_type_group' }
                            ],

                            language: {
                                'emptyTable': "Khoá sinh viên này chưa có dữ liệu <i class='ft-help-circle' style='vertical-align:middle'></i>",
                                'sZeroRecords': "Không có kết quả <i class='ft-help-circle' style='vertical-align:middle'></i>"
                            },

                        });

                    // Create Index column datatable
                    dataTable.on('order.dt search.dt', function () {
                        dataTable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                            cell.innerHTML = i + 1;
                        });
                    }).draw();
                }
                else
                {
                }
            }).change();
        });
    </script>

}