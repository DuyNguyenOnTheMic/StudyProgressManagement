
@{
    ViewBag.Title = "Quản lý khoá sinh viên";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Zero configuration table -->
<section id="configuration">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title-wrap bar-deep-purple">
                        <h4 class="card-title">Quản lý khoá sinh viên</h4>
                    </div>
                </div>
                <div class="card-body collapse show">
                    <div class="card-block card-dashboard">
                        <div class="table-responsive">
                            <button type="button" id="addRow" class="btn btn-primary mb-2" onclick="PopupForm('@Url.Action("AddOrEdit", "StudentCourse")')"><i class="ft-plus"></i>&nbsp; Thêm khoá mới</button>
                            <table class="table table-bordered" id="tblStudentCourse" width="100%">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>Khoá</th>
                                        <th>Mã ngành</th>
                                        <th>Tên ngành</th>
                                        <th>Năm học</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                                <tfoot>
                                    <tr>
                                        <th></th>
                                        <th>Khoá</th>
                                        <th>Mã ngành</th>
                                        <th>Tên ngành</th>
                                        <th>Năm học</th>
                                        <th></th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!--/ Zero configuration table -->

<link href="~/app-assets/vendors/css/tables/datatable/datatables.min.css" rel="stylesheet" />
<link href="~/app-assets/vendors/css/jquery-ui.min.css" rel="stylesheet" />

@section scripts {

    <script src="~/app-assets/vendors/js/datatable/datatables.min.js"></script>
    <script src="~/app-assets/vendors/js/jquery-ui.min.js"></script>

    <script type="text/javascript">

        var popup, dataTable;

        $(document).ready(function () {

            // Populate Student Course datatable
            dataTable = $('#tblStudentCourse').DataTable(
                {
                     ajax: {
                        dataSrc: '',
                        type: 'POST',
                        url: '@Url.Action("GetData", "StudentCourse")',
                        dataType: 'json',
                    },

                    order: [[3, 'asc']],
                    columnDefs: [
                        {
                            visible: false,
                            searchable: true,
                            targets: [2, 3]
                        },
                        {
                            searchable: false,
                            orderable: false,
                            className: 'text-center',
                            targets: [0, 5]
                        },
                        { width: '20px', targets: [0] },
                        { width: '100px', targets: [5] }
                    ],

                    // Row grouping
                    rowGroup: {
                        dataSrc: 'major_name'
                    },

                    columns: [
                        { 'data': null },
                        { 'data': 'course' },
                        { 'data': 'major_id' },
                        { 'data': 'major_name' },
                        { 'data': 'year_study' },
                        {
                            'data': 'id', 'render': function (data) {
                                return "<a class='editRow success p - 0' data-original-title='' title='' onclick=PopupForm('@Url.Action("AddOrEdit","StudentCourse")/" + data + "')><i class='fa fa-pencil font-medium-3 mr-2'></i></a> <a class='deleteRow danger p-0' style='margin-left:5px' data-original-title='' title='' onclick=Delete(" + data + ")><i class='fa fa-trash-o font-medium-3 mr-2'></i></a>";
                            }
                        }
                    ],

                    language: {
                        'url': "/app-assets/language/vi.json"
                    }
                });

            // Create Index column datatable
            dataTable.on('draw.dt', function () {
                dataTable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            });
        });

        // Show Create and Edit form
        function PopupForm(url) {
            var formDiv = $('<div/>')
            $.get(url)
            .done(function (response) {
                formDiv.html(response);

                popup = formDiv.dialog({
                    autoOpen: true,
                    resizable: true,
                    title: 'Quản lý khoá sinh viên',
                    width: 550,
                    open: function () {
                        // Prevent user from add edit delete while dialog is populated
                        $('#addRow').prop('disabled', true);
                        $('.editRow').each(function () {
                            this.style.pointerEvents = 'none';
                        });
                        $('.deleteRow').each(function () {
                            this.style.pointerEvents = 'none';
                        });
                    },
                    close: function () {
                        popup.dialog('destroy').remove();

                        // Re-enable buttons when user closes the dialog
                        $('#addRow').prop('disabled', false);
                        $('.editRow').each(function () {
                            this.style.pointerEvents = 'auto';
                        });
                        $('.deleteRow').each(function () {
                            this.style.pointerEvents = 'auto';
                        });
                    }
                });
            });
        }

        function SubmitForm(form) {
            $.validator.unobtrusive.parse(form);

            if ($(form).valid()) {
                $.ajax({
                    type: 'POST',
                    url: form.action,
                    data: $(form).serialize(),
                    success: function (data) {
                        if (data.success) {
                            popup.dialog('close');
                            dataTable.ajax.reload();

                            // Show message when create or edit succeeded
                            toastr.options.positionClass = 'toast-bottom-right';
                            toastr.success(data.message);
                        }
                    }
                });
            }
            return false;
        }

        function Delete(id) {
            swal({
                title: 'Thông báo',
                text: "Bạn có chắc muốn xoá khoá này?",
                type: 'warning',
                showCancelButton: true,
                cancelButtonText: 'Huỷ',
                confirmButtonText: 'Xoá',

            }).then(function () {
                // Delete item
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Delete", "StudentCourse")/' + id,
                    success: function (data) {
                        if (data.success) {
                            dataTable.ajax.reload();

                            // Show message when delete succeeded
                            toastr.options.positionClass = 'toast-bottom-right';
                            toastr.success(data.message);
                        }
                        else
                        {
                            // Show message for user to confirm delete all data
                            swal({
                                title: 'Thông báo',
                                text: 'Khoá này đã có dữ liệu được import vào, bạn có muốn xoá hết tất cả dữ liệu liên quan đến khoá này?',
                                type: 'warning',
                                showCancelButton: true,
                                cancelButtonText: 'Huỷ',
                                confirmButtonText: 'Xác nhận xoá',

                            }).then(function () {

                                // Show waiting message while delete
                                swal({
                                    title: 'Đang xoá dữ liệu...',
                                    allowEscapeKey: false,
                                    allowOutsideClick: false,
                                    onOpen: () => {
                                        swal.showLoading();
                                    }
                                })

                                // Ajax call to delete all study results and registration results of student course
                                $.ajax({
                                    type: 'POST',
                                    url: '@Url.Action("DeleteAll", "StudentCourse")/' + id,
                                    success: function (data) {
                                        if (data.success) {
                                            dataTable.ajax.reload();

                                            // Show succeeded message
                                            swal("Thông báo", "Xoá thành công khoá sinh viên!", "success").done();
                                        }
                                    }
                                });

                            }), function (dismiss) {
                                if (dismiss === 'cancel' || dismiss === 'close') {
                                    // Ignore
                                }
                            }
                        }
                    }
                });

            }, function (dismiss) {
                if (dismiss === 'cancel' || dismiss === 'close') {
                    // Ignore
                }
            })
        }
    </script>
}