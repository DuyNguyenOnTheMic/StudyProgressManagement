
@{
    ViewBag.Title = "Thống kê tiến độ học tập";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Section start -->
<section>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title-wrap bar-info">
                        <h4 class="card-title mb-0">Thống kê tiến độ học tập</h4>
                    </div>
                </div>
                <div class="card-body">
                    <div class="card-block">
                        <form>
                            <div class="form-body">
                                <div class="row justify-content-center">
                                    <div class="col-12">
                                        <div class="form-group">
                                            <label>Ngành: </label>
                                            <select class="form-control" id="comboboxMajor" name="major" required">
                                                <option value="" selected="selected" disabled="disabled"> ----------- Chọn ngành ----------- </option>
                                                @foreach (var major in ViewBag.majors)
                                                {
                                                    <option value="@major.id">@major.name</option>
                                                }
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label>Khoá: </label>
                                            <select class="form-control" id="comboboxStudentCourse" name="student_course" required>
                                                <option value="" selected="selected" disabled="disabled"> ----------- Chọn khoá ----------- </option>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label>Tín chỉ cần đạt: </label>
                                            <input type="number" min="0" class="form-control" id="txtCredits" name="term" placeholder="Nhập số tín chỉ cần đạt tính đến hiện tại" required oninput="this.value = this.value.toUpperCase()">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-actions">
                                <button type="submit" class="btn btn-primary btn-lg btn-block" id="btnSubmit">
                                    Thống kê
                                    <i class="ft-trending-up position-right"></i>
                                </button>
                            </div>
                        </form>
                    </div>
                    <div class="card-block chartjs" style="display: none">
                        <canvas id="simple-pie-chart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Section end -->

@section scripts {
    <script src="~/app-assets/vendors/js/chart.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2"></script>


    <script type="text/javascript">

        $(document).ready(function () {
            // Load cascading dropdown between majors and student courses
            $("#comboboxMajor").change(function () {
                $("#comboboxStudentCourse").empty();
                var majorId = $('#comboboxMajor option:selected').val();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadStudentCourses", "ProgressStatistics")',
                    dataType: 'json',
                    data: { majorId: majorId },
                    success: function (results) {
                        $("#comboboxStudentCourse").append('<option value="" selected="selected" disabled="disabled"> ----------- Chọn khoá ----------- </option>');
                        $.each(results, function (i, result) {
                            $("#comboboxStudentCourse").append('<option value="' + result.id + '">' + result.course + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            }).change();
        });

        //Get the context of the Chart canvas element we want to select
        var ctx = $("#simple-pie-chart");

        // Chart Options
        var chartOptions = {
            responsive: true,
            maintainAspectRatio: false,
            responsiveAnimationDuration: 500,
            tooltips: {
                enabled: false
            },
            plugins: {
                title: {
                    display: true,
                    font: {
                        size: 25
                    }
                },
                datalabels: {
                    formatter: function (value, context) {
                        return Math.round(value / context.chart.getDatasetMeta(0).total * 100) + "%";
                    },
                    color: '#FFFFFF',
                    font: {
                        weight: 'bold',
                        size: 16,
                    },
                }
            }
        };

        const plugin = {
            id: 'emptyChart',
            afterDraw(chart, args, options) {
                const { datasets } = chart.data;
                let hasData = false;

                for (let dataset of datasets) {
                    // Check if dataset is null
                    if (dataset.data.length > 0 && dataset.data.some(item => item !== 0)) {
                        hasData = true;
                        break;
                    }
                }

                if (!hasData) {
                    // Show error message when null
                    const { chartArea: { left, top, right, bottom }, ctx } = chart;
                    const centerX = (left + right) / 2;

                    chart.clear();
                    ctx.save();
                    ctx.textAlign = 'center';
                    ctx.font = 'bold 20px Montserrat';
                    ctx.fillStyle = 'rgba(97,97,97,.87)';
                    ctx.fillText('Chưa có dữ liệu', centerX, top);
                    ctx.font = 'bold 20px feather';
                    ctx.fillText('\uE9ec', centerX + 95, top);
                    ctx.restore();
                }
            }
        };

        // Create the chart
        var chart = new Chart(ctx, {
            type: "pie",
            data: {},
            options: chartOptions,
            plugins: [plugin, ChartDataLabels]
        });

        $("#btnSubmit").click(function (event) {

            event.preventDefault();

            // Get form's data
            var majorId = document.getElementById("comboboxMajor").value;
            var studentCourseId = document.getElementById("comboboxStudentCourse").value;
            var credits = document.getElementById("txtCredits").value;


            // Validation for form
            if (majorId == '') {
                toastr.options.positionClass = 'toast-bottom-right';
                toastr.warning('Bạn chưa chọn ngành và khoá');
            }
            else if (studentCourseId == '') {
                toastr.options.positionClass = 'toast-bottom-right';
                toastr.warning('Bạn chưa chọn khoá');
            }
            else if (credits == '') {
                toastr.options.positionClass = 'toast-bottom-right';
                toastr.warning('Bạn chưa nhập tín chỉ cần đạt');
            }
            else if (credits < 0) {
                toastr.options.positionClass = 'toast-bottom-right';
                toastr.warning('Tín chỉ không được âm');
            }
            else {

                $('.chartjs').show();

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetStatistics", "ProgressStatistics")',
                    data: { 'studentCourseId': studentCourseId, 'credits': credits },
                       success: function (response) {
                           var chartData = {
                               labels: ['Sinh viên đạt', 'Sinh viên chưa đạt'],
                               datasets: [{
                                   label: "My First dataset",
                                   data: [response.Data.passStudents, response.Data.failStudents],
                                   backgroundColor: ["rgba(102, 110, 232, 0.8)", "rgba(255, 95, 32, 0.8)"],
                               }]
                           };

                           chart.options.plugins.title.text = 'Thống kê sinh viên đạt ' + credits + ' tín chỉ';
                           chart.data = chartData;
                           chart.update();
                       }
                });
            }
        });
    </script>
}